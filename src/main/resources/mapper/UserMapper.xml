<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.liqian.mall.dao.UserMapper">
    <resultMap id="BaseResultMap" type="com.liqian.mall.entity.User">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="question" property="question" jdbcType="VARCHAR"/>
        <result column="answer" property="answer" jdbcType="VARCHAR"/>
        <result column="role" property="role" jdbcType="TINYINT"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, username, password, email, phone, question, answer, role, create_time, update_time
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from mall_user
        where id = #{id,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from mall_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insertSelective" parameterType="com.liqian.mall.entity.User">
        insert into mall_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="question != null">
                question,
            </if>
            <if test="answer != null">
                answer,
            </if>
            <if test="role != null">
                role,
            </if>
            create_time,
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="question != null">
                #{question,jdbcType=VARCHAR},
            </if>
            <if test="answer != null">
                #{answer,jdbcType=VARCHAR},
            </if>
            <if test="role != null">
                #{role,jdbcType=TINYINT},
            </if>
            now(),
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.liqian.mall.entity.User">
        update mall_user
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="question != null">
                question = #{question,jdbcType=VARCHAR},
            </if>
            <if test="answer != null">
                answer = #{answer,jdbcType=VARCHAR},
            </if>
            <if test="role != null">
                role = #{role,jdbcType=TINYINT},
            </if>
            update_time = now(),
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <!--检查用户名是否存在-->
    <select id="checkUsername" resultType="java.lang.Integer" parameterType="java.lang.String">
        select
        count(1)
        from mall_user
        where username = #{username,jdbcType=VARCHAR}
    </select>
    <select id="selectLogin" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from mall_user
        where username = #{username,jdbcType=VARCHAR}
        and password = #{password,jdbcType=VARCHAR}
    </select>
    <select id="checkEmail" resultType="java.lang.Integer" parameterType="java.lang.String">
        select
        count(1)
        from mall_user
        where email = #{email,jdbcType=VARCHAR}
    </select>
    <select id="getQuestionByUsername" resultType="java.lang.String" parameterType="java.lang.String">
        select
        question
        from mall_user
        where username = #{username,jdbcType=VARCHAR}
    </select>
    <select id="checkAnswer" resultType="java.lang.Integer">
        select
        count(1)
        from mall_user
        where username = #{username,jdbcType=VARCHAR}
        and question = #{question,jdbcType=VARCHAR}
        and answer = #{answer,jdbcType=VARCHAR}
    </select>

    <update id="updatePasswordByUsername">
        update
        mall_user
        set password = #{passwordNew,jdbcType=VARCHAR},
        update_time = now()
        where username = #{username,jdbcType=VARCHAR}
    </update>
    <select id="checkPassword" resultType="java.lang.Integer">
        select
        count(1)
        from mall_user
        where password =  #{password,jdbcType=VARCHAR}
        and id = #{userId}
    </select>
</mapper>